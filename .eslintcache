[{"E:\\It-kamasutra\\semrush_test\\src\\App.tsx":"1","E:\\It-kamasutra\\semrush_test\\src\\index.tsx":"2","E:\\It-kamasutra\\semrush_test\\src\\store\\slices\\Calc-slice.ts":"3","E:\\It-kamasutra\\semrush_test\\src\\store\\Store.ts":"4","E:\\It-kamasutra\\semrush_test\\src\\components\\InputForm.tsx":"5","E:\\It-kamasutra\\semrush_test\\src\\components\\InfoTable.tsx":"6"},{"size":5322,"mtime":1607519547462,"results":"7","hashOfConfig":"8"},{"size":536,"mtime":1607509682264,"results":"9","hashOfConfig":"8"},{"size":1148,"mtime":1607517212334,"results":"10","hashOfConfig":"8"},{"size":445,"mtime":1607509682332,"results":"11","hashOfConfig":"8"},{"size":4329,"mtime":1607520463600,"results":"12","hashOfConfig":"8"},{"size":1295,"mtime":1607520463265,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hx11uw",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\It-kamasutra\\semrush_test\\src\\App.tsx",["27"],"E:\\It-kamasutra\\semrush_test\\src\\index.tsx",[],"E:\\It-kamasutra\\semrush_test\\src\\store\\slices\\Calc-slice.ts",[],"E:\\It-kamasutra\\semrush_test\\src\\store\\Store.ts",[],"E:\\It-kamasutra\\semrush_test\\src\\components\\InputForm.tsx",["28"],"import React, {ChangeEvent, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {initialStateType, setData, setFirstPay, setMarga, setPayPeriod, setPrice} from '../store/slices/Calc-slice';\r\nimport {RootStateType} from '../store/Store';\r\n\r\n\r\nexport const InputForm = () => {\r\n\r\n  const dataFromLocalStorage = localStorage.getItem('data');\r\n  const parsedDataFomStorage: initialStateType = dataFromLocalStorage && JSON.parse(dataFromLocalStorage);\r\n\r\n  console.log(parsedDataFomStorage);\r\n\r\n  const data = useSelector<RootStateType, initialStateType>(state => state.calc);\r\n  const dicpatch = useDispatch();\r\n\r\n  console.log(parsedDataFomStorage);\r\n\r\n  useEffect(() => {\r\n    if (!parsedDataFomStorage) return;\r\n    else dicpatch(setData({data: parsedDataFomStorage}));\r\n  }, [dicpatch]);\r\n\r\n\r\n  const onChangePriceHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    dicpatch(setPrice({price: +e.currentTarget.value}));\r\n  };\r\n\r\n  const onChangeFirstPayHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    // dicpatch(setFirstPay({firstPay: +e.currentTarget.value}));\r\n  };\r\n\r\n  const onChangePayPeriodHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    dicpatch(setPayPeriod({payPeriod: +e.currentTarget.value}));\r\n  };\r\n\r\n  const onChangeMargaHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    dicpatch(setMarga({marga: +e.currentTarget.value}));\r\n  };\r\n\r\n  const chageFirstPayHandler = (value: number) => {\r\n    dicpatch(setFirstPay({firstPay: value}));\r\n  };\r\n\r\n  const saveHandler = () => {\r\n    localStorage.setItem('data', JSON.stringify(data));\r\n  };\r\n\r\n  const clearDataHandler = () => {\r\n    const payload: initialStateType = {\r\n      price: 0,\r\n      firstPay: 0.15,\r\n      payPeriod: 0,\r\n      marga: 0\r\n    };\r\n    dicpatch(setData({data: payload}));\r\n\r\n    localStorage.clear();\r\n  };\r\n\r\n  return (\r\n    <div className='formWrapper'>\r\n\r\n      <div className='inputWrapper'>\r\n        <label>Стоимость недвижимости</label>\r\n        <div className='input'>\r\n          <input type=\"text\" value={data.price} onChange={onChangePriceHandler}/>\r\n          P\r\n        </div>\r\n      </div>\r\n\r\n      <div className='inputWrapper'>\r\n        <label htmlFor=\"\">Первоначальный взнос</label>\r\n        <div className='input'><input type=\"text\" value={data.firstPay * data.price}\r\n                                      onChange={onChangeFirstPayHandler}/>Р\r\n        </div>\r\n        <div className='firstPayWrapper'>\r\n          <div\r\n            onClick={() => chageFirstPayHandler(0.1)}\r\n            className={0.10 === data.firstPay ? 'firstPayCurrent' : 'firstPay'}\r\n          >\r\n            10%\r\n          </div>\r\n          <div\r\n            onClick={() => chageFirstPayHandler(0.15)}\r\n            className={0.15 === data.firstPay ? 'firstPayCurrent' : 'firstPay'}\r\n          >\r\n            15%\r\n          </div>\r\n          <div\r\n            onClick={() => chageFirstPayHandler(0.2)}\r\n            className={0.2 === data.firstPay ? 'firstPayCurrent' : 'firstPay'}\r\n          >\r\n            20%\r\n          </div>\r\n          <div\r\n            onClick={() => chageFirstPayHandler(0.25)}\r\n            className={0.25 === data.firstPay ? 'firstPayCurrent' : 'firstPay'}\r\n          >\r\n            25%\r\n          </div>\r\n          <div\r\n            onClick={() => chageFirstPayHandler(0.3)}\r\n            className={0.3 === data.firstPay ? 'firstPayCurrent' : 'firstPay'}\r\n          >\r\n            30%\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='inputWrapper'>\r\n        <label htmlFor=\"input\">Срок кредита</label>\r\n        <div className='input'>\r\n          <input type=\"text\" value={data.payPeriod} onChange={onChangePayPeriodHandler}/>\r\n          Лет\r\n        </div>\r\n      </div>\r\n\r\n      <div className='inputWrapper'>\r\n        <label htmlFor=\"\">Процентная ставка</label>\r\n        <div className='input'>\r\n          <input type=\"text\" value={data.marga} onChange={onChangeMargaHandler}/>\r\n          %\r\n        </div>\r\n      </div>\r\n\r\n      <div className='buttonWrapper'>\r\n        <button\r\n          className='saveButton'\r\n          onClick={saveHandler}\r\n        >save\r\n        </button>\r\n        <button onClick={clearDataHandler}>clear</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","E:\\It-kamasutra\\semrush_test\\src\\components\\InfoTable.tsx",[],{"ruleId":"29","severity":1,"message":"30","line":22,"column":6,"nodeType":"31","endLine":22,"endColumn":16,"suggestions":"32"},{"ruleId":"29","severity":1,"message":"30","line":22,"column":6,"nodeType":"31","endLine":22,"endColumn":16,"suggestions":"33"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'parsedDataFomStorage'. Either include it or remove the dependency array.","ArrayExpression",["34"],["35"],{"desc":"36","fix":"37"},{"desc":"36","fix":"38"},"Update the dependencies array to be: [dicpatch, parsedDataFomStorage]",{"range":"39","text":"40"},{"range":"41","text":"40"},[790,800],"[dicpatch, parsedDataFomStorage]",[811,821]]