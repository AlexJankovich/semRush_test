{"version":3,"sources":["components/InfoTable.tsx","store/slices/Calc-slice.ts","components/InputForm.tsx","App.tsx","reportWebVitals.ts","store/Store.ts","index.tsx"],"names":["InfoTable","data","useSelector","state","calc","creditBody","price","firstPay","mothPay","a","b","marga","payPeriod","className","slice","createSlice","name","initialState","reducers","setPrice","action","payload","setFirstPay","setPayPeriod","setMarga","setData","calcReducer","reducer","actions","InputForm","dataFromLocalStorage","localStorage","getItem","parsedDataFomStorage","JSON","parse","console","log","dicpatch","useDispatch","useEffect","chageFirstPayHandler","value","type","onChange","e","currentTarget","htmlFor","onClick","setItem","stringify","clear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10d9a912.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {initialStateType} from '../store/slices/Calc-slice';\r\nimport {RootStateType} from '../store/Store';\r\n\r\n\r\nexport const InfoTable = () => {\r\n\r\n  const data = useSelector<RootStateType, initialStateType>(state => state.calc);\r\n\r\n  const creditBody = () => {\r\n    return data.price - data.firstPay * data.price;\r\n  };\r\n\r\n  const mothPay = () => {\r\n    const a = creditBody();\r\n    const b = data.marga / 1200;\r\n    return a * (b + b / (((1 + b) ** (data.payPeriod * 12)) - 1));\r\n  };\r\n\r\n  const howMuchMoney = () => {\r\n    const a = mothPay() | 0;\r\n    return 5 * a / 3;\r\n  };\r\n\r\n  const overPay = () => {\r\n    const a = mothPay();\r\n    return a * data.payPeriod * 12 - creditBody();\r\n  };\r\n\r\n  return (\r\n    <div className='infoWrapper'>\r\n      <div>\r\n        <span>Ежемесячный платёж</span>\r\n        <div>{mothPay() | 0}</div>\r\n      </div>\r\n      <div>\r\n        <span>Необходимфй доход</span>\r\n        <div>{howMuchMoney() | 0}</div>\r\n      </div>\r\n      <div>\r\n        <span>Переплата</span>\r\n        <div>{overPay() | 0}</div>\r\n      </div>\r\n      <div>\r\n        <span>Тело кредита</span>\r\n        <div>{creditBody() | 0}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nexport type initialStateType = {\r\n  price:number\r\n  firstPay:number\r\n  payPeriod:number\r\n  marga:number\r\n}\r\n\r\nconst initialState:initialStateType = {\r\n  price: 0,\r\n  firstPay:0.15,\r\n  payPeriod: 0,\r\n  marga: 0,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'calcReducer',\r\n  initialState: initialState,\r\n  reducers: {\r\n    setPrice(state, action: PayloadAction<{ price: number }>) {\r\n      state.price = action.payload.price;\r\n    },\r\n    setFirstPay(state, action: PayloadAction<{ firstPay: number }>) {\r\n      state.firstPay = action.payload.firstPay;\r\n    },\r\n    setPayPeriod(state, action: PayloadAction<{ payPeriod: number }>) {\r\n      state.payPeriod = action.payload.payPeriod;\r\n    },\r\n    setMarga(state, action: PayloadAction<{ marga: number }>) {\r\n      state.marga = action.payload.marga;\r\n    },\r\n    setData(state, action: PayloadAction<{ data: initialStateType }>){\r\n      return {...action.payload.data}\r\n    }\r\n  }\r\n});\r\n\r\nexport const calcReducer = slice.reducer;\r\nexport const {\r\n  setFirstPay,\r\n  setMarga,\r\n  setPayPeriod,\r\n  setPrice,\r\n  setData} = slice.actions;","import React, {ChangeEvent, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {initialStateType, setData, setFirstPay, setMarga, setPayPeriod, setPrice} from '../store/slices/Calc-slice';\r\nimport {RootStateType} from '../store/Store';\r\n\r\n\r\nexport const InputForm = () => {\r\n\r\n  const dataFromLocalStorage = localStorage.getItem('data');\r\n  const parsedDataFomStorage: initialStateType = dataFromLocalStorage && JSON.parse(dataFromLocalStorage);\r\n\r\n  console.log(parsedDataFomStorage);\r\n\r\n  const data = useSelector<RootStateType, initialStateType>(state => state.calc);\r\n  const dicpatch = useDispatch();\r\n\r\n  console.log(parsedDataFomStorage);\r\n\r\n  useEffect(() => {\r\n    if (!parsedDataFomStorage) return;\r\n    else dicpatch(setData({data: parsedDataFomStorage}));\r\n  }, [dicpatch]);\r\n\r\n\r\n  const onChangePriceHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    dicpatch(setPrice({price: +e.currentTarget.value}));\r\n  };\r\n\r\n  const onChangeFirstPayHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    // dicpatch(setFirstPay({firstPay: +e.currentTarget.value}));\r\n  };\r\n\r\n  const onChangePayPeriodHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    dicpatch(setPayPeriod({payPeriod: +e.currentTarget.value}));\r\n  };\r\n\r\n  const onChangeMargaHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    dicpatch(setMarga({marga: +e.currentTarget.value}));\r\n  };\r\n\r\n  const chageFirstPayHandler = (value: number) => {\r\n    dicpatch(setFirstPay({firstPay: value}));\r\n  };\r\n\r\n  const saveHandler = () => {\r\n    localStorage.setItem('data', JSON.stringify(data));\r\n  };\r\n\r\n  const clearDataHandler = () => {\r\n    const payload: initialStateType = {\r\n      price: 0,\r\n      firstPay: 0.15,\r\n      payPeriod: 0,\r\n      marga: 0\r\n    };\r\n    dicpatch(setData({data: payload}));\r\n\r\n    localStorage.clear();\r\n  };\r\n\r\n  return (\r\n    <div className='formWrapper'>\r\n\r\n      <div className='inputWrapper'>\r\n        <label>Стоимость недвижимости</label>\r\n        <div className='input'>\r\n          <input type=\"text\" value={data.price} onChange={onChangePriceHandler}/>\r\n          P\r\n        </div>\r\n      </div>\r\n\r\n      <div className='inputWrapper'>\r\n        <label htmlFor=\"\">Первоначальный взнос</label>\r\n        <div className='input'><input type=\"text\" value={data.firstPay * data.price}\r\n                                      onChange={onChangeFirstPayHandler}/>Р\r\n        </div>\r\n        <div className='firstPayWrapper'>\r\n          <div\r\n            onClick={() => chageFirstPayHandler(0.1)}\r\n            className={0.10 === data.firstPay ? 'firstPayCurrent' : 'firstPay'}\r\n          >\r\n            10%\r\n          </div>\r\n          <div\r\n            onClick={() => chageFirstPayHandler(0.15)}\r\n            className={0.15 === data.firstPay ? 'firstPayCurrent' : 'firstPay'}\r\n          >\r\n            15%\r\n          </div>\r\n          <div\r\n            onClick={() => chageFirstPayHandler(0.2)}\r\n            className={0.2 === data.firstPay ? 'firstPayCurrent' : 'firstPay'}\r\n          >\r\n            20%\r\n          </div>\r\n          <div\r\n            onClick={() => chageFirstPayHandler(0.25)}\r\n            className={0.25 === data.firstPay ? 'firstPayCurrent' : 'firstPay'}\r\n          >\r\n            25%\r\n          </div>\r\n          <div\r\n            onClick={() => chageFirstPayHandler(0.3)}\r\n            className={0.3 === data.firstPay ? 'firstPayCurrent' : 'firstPay'}\r\n          >\r\n            30%\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='inputWrapper'>\r\n        <label htmlFor=\"input\">Срок кредита</label>\r\n        <div className='input'>\r\n          <input type=\"text\" value={data.payPeriod} onChange={onChangePayPeriodHandler}/>\r\n          Лет\r\n        </div>\r\n      </div>\r\n\r\n      <div className='inputWrapper'>\r\n        <label htmlFor=\"\">Процентная ставка</label>\r\n        <div className='input'>\r\n          <input type=\"text\" value={data.marga} onChange={onChangeMargaHandler}/>\r\n          %\r\n        </div>\r\n      </div>\r\n\r\n      <div className='buttonWrapper'>\r\n        <button\r\n          className='saveButton'\r\n          onClick={saveHandler}\r\n        >save\r\n        </button>\r\n        <button onClick={clearDataHandler}>clear</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport {InfoTable} from './components/InfoTable';\nimport {InputForm} from './components/InputForm';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <InputForm/>\n      <InfoTable/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, configureStore} from '@reduxjs/toolkit';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { calcReducer } from './slices/Calc-slice';\r\n\r\nconst RootReducer = combineReducers({\r\n calc:calcReducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof RootReducer>\r\n\r\nexport const store = configureStore({\r\n  reducer: RootReducer,\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware),\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './store/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}